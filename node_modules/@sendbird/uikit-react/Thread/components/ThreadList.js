import { _ as __assign } from '../../chunks/bundle-DbRIJpcJ.js';
import React__default from 'react';
import ThreadListItem from './ThreadListItem.js';
import { compareMessagesForGrouping } from '../../Channel/utils/compareMessagesForGrouping.js';
import { isSameDay } from 'date-fns';
import { MessageProvider } from '../../Message/context.js';
import { g as getCaseResolvedReplyType } from '../../chunks/bundle-tM4TiqWF.js';
import { u as useThread } from '../../chunks/bundle-DWXsL_Uu.js';
import { u as useSendbird } from '../../chunks/bundle-CR2c41RY.js';
import { u as useLocalization } from '../../chunks/bundle-Cv0coWWZ.js';
import '../../chunks/bundle-rLN6zwDR.js';
import '../../chunks/bundle-COmS_fte.js';
import '../../chunks/bundle-XjvHd1hm.js';
import '../../ui/DateSeparator.js';
import '../../chunks/bundle-DTONsAg3.js';
import '../../chunks/bundle-DQVSPiqe.js';
import '../../chunks/bundle-CPT6JkaQ.js';
import '../../chunks/bundle-53yz_Puu.js';
import '../../chunks/bundle-Bad3gFT1.js';
import 'react-dom';
import '../../chunks/bundle-DReYPOOW.js';
import '../../chunks/bundle-Cf0Yt_FB.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-BJaAgf7u.js';
import '../../chunks/bundle-DbQSQOQR.js';
import '../../chunks/bundle-CoNW0R4l.js';
import '@sendbird/chat/groupChannel';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-BJAkupQH.js';
import '../../chunks/bundle-DZsEFGf2.js';
import '../../chunks/bundle-34AUt0BR.js';
import '../../ui/FileViewer.js';
import '../../hooks/useModal.js';
import '../../chunks/bundle-DW6-i24T.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';
import '../../chunks/bundle-Cb0mwRBB.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-CsvU0ytJ.js';
import '../../chunks/bundle-CSfT7kMK.js';
import '@sendbird/uikit-tools';
import '../../chunks/bundle-BI7O42KS.js';
import '../../chunks/bundle-Ct1N0Nbc.js';
import '../../chunks/bundle-BQBvS39w.js';
import '../../chunks/bundle-CmV4hGKo.js';
import '../../ui/MessageInput.js';
import '../../chunks/bundle-Bnuhw3xk.js';
import 'dompurify';
import '../../chunks/bundle-SWqCpAHS.js';
import '../../chunks/bundle-Clc9Q0F3.js';
import '../../chunks/bundle-BS39H5y8.js';
import '../../chunks/bundle-BDw9MgcJ.js';
import '../context/types.js';
import '../../chunks/bundle-Dz7CEFlD.js';
import '../../ui/SortByRow.js';
import '../../ui/MessageItemReactionMenu.js';
import '../../ui/ReactionButton.js';
import '../../chunks/bundle-BOYaDbqk.js';
import '../../chunks/bundle-BoHxQjRf.js';
import '../../ui/Loader.js';
import '../../chunks/bundle-DN85cQrs.js';
import '../../chunks/bundle-CyJpjuTl.js';
import '../../ui/EmojiReactions.js';
import '../../ui/ReactionBadge.js';
import '../../ui/BottomSheet.js';
import '../../ui/UserListItem.js';
import '../../chunks/bundle-BMIXDSgA.js';
import '../../ui/MutedAvatarOverlay.js';
import '../../ui/Checkbox.js';
import '../../ui/UserProfile.js';
import '../../sendbirdSelectors.js';
import '../../chunks/bundle-BAj-PSqM.js';
import '../../ui/Tooltip.js';
import '../../ui/TooltipWrapper.js';
import '../../chunks/bundle-ChmyvPCX.js';
import '../../ui/MobileMenu.js';
import '../../chunks/bundle-CWfh7mbT.js';
import '@sendbird/chat/message';
import '../../chunks/bundle-3Qj3c7g1.js';
import '../../chunks/bundle-Cme2y2_4.js';
import '../../chunks/bundle-DZX5QUNj.js';
import '../../ui/OGMessageItemBody.js';
import '../../chunks/bundle-D2O7dIZa.js';
import '../../ui/MentionLabel.js';
import '../../ui/LinkLabel.js';
import '../../ui/TextMessageItemBody.js';
import '../../ui/FileMessageItemBody.js';
import '../../ui/TextButton.js';
import '../../ui/VoiceMessageItemBody.js';
import '../../ui/ProgressBar.js';
import '../../VoicePlayer/useVoicePlayer.js';
import '../../chunks/bundle-23R2lZts.js';
import '../../VoiceRecorder/context.js';
import '../../ui/PlaybackTime.js';
import '../../ui/ThumbnailMessageItemBody.js';
import '../../chunks/bundle-SY7lsPoU.js';
import '../../ui/UnknownMessageItemBody.js';
import '../../ui/TemplateMessageItemBody.js';
import '../../chunks/bundle-BeFPtjzn.js';
import '../../ui/FallbackTemplateMessageItemBody.tsx.js';
import '../../ui/LoadingTemplateMessageItemBody.tsx.js';
import '../../ui/MessageFeedbackFailedModal.js';
import '../../chunks/bundle-E3SeQw-U.js';
import '../../chunks/bundle-C6OS2KwD.js';
import '../../Message/hooks/useDirtyGetMentions.js';
import '../../chunks/bundle-DHFiI7lV.js';
import '../../chunks/bundle-D7MmwpyJ.js';
import '../../chunks/bundle-Y2voOwuN.js';
import '../../chunks/bundle-WAB__IWd.js';

function ThreadList(_a) {
    var className = _a.className, _b = _a.renderMessage, renderMessage = _b === void 0 ? function (props) { return React__default.createElement(ThreadListItem, __assign({}, props)); } : _b, renderCustomSeparator = _a.renderCustomSeparator, scrollRef = _a.scrollRef, scrollBottom = _a.scrollBottom;
    var config = useSendbird().state.config;
    var stringSet = useLocalization().stringSet;
    var userId = config.userId;
    var _c = useThread().state, currentChannel = _c.currentChannel, allThreadMessages = _c.allThreadMessages, localThreadMessages = _c.localThreadMessages;
    return (React__default.createElement("div", { className: "sendbird-thread-list ".concat(className) },
        allThreadMessages.map(function (message, idx) {
            var _a;
            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
            var prevMessage = allThreadMessages[idx - 1];
            var nextMessage = allThreadMessages[idx + 1];
            // eslint-disable-next-line no-constant-condition
            var _b = compareMessagesForGrouping(prevMessage, message, nextMessage, stringSet, currentChannel, getCaseResolvedReplyType(config.groupChannel.replyType).upperCase)
                , chainTop = _b[0], chainBottom = _b[1];
            var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && (isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt)));
            var handleScroll = function () {
                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
                if (current && scrollBottom) {
                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
                    if (scrollBottom < bottom) {
                        current.scrollTop += bottom - scrollBottom;
                    }
                }
            };
            return (React__default.createElement(MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
                message: message,
                chainTop: chainTop,
                chainBottom: chainBottom,
                hasSeparator: hasSeparator,
                renderCustomSeparator: renderCustomSeparator,
                handleScroll: handleScroll,
            })));
        }),
        localThreadMessages.map(function (message) {
            var _a;
            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
            var handleScroll = function () {
                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
                if (current) {
                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
                    if (scrollBottom < bottom) {
                        current.scrollTop += bottom - scrollBottom;
                    }
                }
            };
            return (React__default.createElement(MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
                message: message,
                hasSeparator: false,
                renderCustomSeparator: renderCustomSeparator,
                handleScroll: handleScroll,
            })));
        })));
}

export { ThreadList as default };
//# sourceMappingURL=ThreadList.js.map
