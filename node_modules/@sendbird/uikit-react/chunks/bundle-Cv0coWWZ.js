import { _ as __assign } from './bundle-DbRIJpcJ.js';
import React__default from 'react';
import { g as getStringSet } from './bundle-CPT6JkaQ.js';
import { l as locale } from './bundle-XjvHd1hm.js';

var LocalizationContextDefault = {
    stringSet: getStringSet('en'),
    dateLocale: locale,
};
var LocalizationContext = React__default.createContext(LocalizationContextDefault);
var LocalizationProvider = function (props) {
    var children = props.children;
    return React__default.createElement(LocalizationContext.Provider, { value: __assign(__assign({}, LocalizationContextDefault), props) }, children);
};
var useLocalization = function () {
    var context = React__default.useContext(LocalizationContext);
    if (!context) {
        throw new Error('`useLocalization` hook must be used within `SendbirdProvider` that includes `LocalizationProvider`.');
    }
    return context;
};

export { LocalizationContext as L, LocalizationProvider as a, useLocalization as u };
//# sourceMappingURL=bundle-Cv0coWWZ.js.map
