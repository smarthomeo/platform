'use strict';

var _tslib = require('../../chunks/bundle-DqhRrRu9.js');
var React = require('react');
var Thread_components_ThreadListItem = require('./ThreadListItem.js');
var Channel_utils_compareMessagesForGrouping = require('../../Channel/utils/compareMessagesForGrouping.js');
var dateFns = require('date-fns');
var Message_context = require('../../Message/context.js');
var resolvedReplyType = require('../../chunks/bundle-BbgK24yl.js');
var ThreadProvider = require('../../chunks/bundle-CAvNzDO4.js');
var useSendbird = require('../../chunks/bundle-BMIzPycb.js');
var LocalizationContext = require('../../chunks/bundle-lp9D8ZMu.js');
require('../../chunks/bundle-CBhEnyPT.js');
require('../../chunks/bundle-CEd9iMBr.js');
require('../../chunks/bundle-9W_Mt6kl.js');
require('../../ui/DateSeparator.js');
require('../../chunks/bundle-92vJTR5x.js');
require('../../chunks/bundle-BQ1X0QX3.js');
require('../../chunks/bundle-BY-9xDoX.js');
require('../../chunks/bundle-CFYBMS_Z.js');
require('../../chunks/bundle-BQdBtz28.js');
require('react-dom');
require('../../chunks/bundle-C51hAZlA.js');
require('../../chunks/bundle-OplQKA4B.js');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../ui/Icon.js');
require('../../chunks/bundle-KfgcZyeV.js');
require('../../chunks/bundle-tSTMSLcO.js');
require('../../chunks/bundle-HjGh1y6m.js');
require('@sendbird/chat/groupChannel');
require('../../utils/message/getOutgoingMessageState.js');
require('../../chunks/bundle-DyLlbKpL.js');
require('../../chunks/bundle-CeoB8ULb.js');
require('../../chunks/bundle-DBIZFnYM.js');
require('../../ui/FileViewer.js');
require('../../hooks/useModal.js');
require('../../chunks/bundle-BotH0J8Z.js');
require('@sendbird/chat');
require('@sendbird/chat/openChannel');
require('../../chunks/bundle-CsQaohle.js');
require('../../ui/ImageRenderer.js');
require('../../chunks/bundle-DjLMC7j4.js');
require('../../chunks/bundle-Jhfevess.js');
require('@sendbird/uikit-tools');
require('../../chunks/bundle-DkhamDsK.js');
require('../../chunks/bundle-BBt_JEuk.js');
require('../../chunks/bundle-jWlqkecm.js');
require('../../chunks/bundle-BP3OkIs4.js');
require('../../ui/MessageInput.js');
require('../../chunks/bundle-BMzPlIor.js');
require('dompurify');
require('../../chunks/bundle-C9s_U68F.js');
require('../../chunks/bundle-BBt-ekuQ.js');
require('../../chunks/bundle-D_F384tn.js');
require('../../chunks/bundle-Ovj9Tgyp.js');
require('../context/types.js');
require('../../chunks/bundle-DoVO573J.js');
require('../../ui/SortByRow.js');
require('../../ui/MessageItemReactionMenu.js');
require('../../ui/ReactionButton.js');
require('../../chunks/bundle-o_i_sKpU.js');
require('../../chunks/bundle-Bd-yMLRx.js');
require('../../ui/Loader.js');
require('../../chunks/bundle-CcsGvnld.js');
require('../../chunks/bundle-DGvt_fHB.js');
require('../../ui/EmojiReactions.js');
require('../../ui/ReactionBadge.js');
require('../../ui/BottomSheet.js');
require('../../ui/UserListItem.js');
require('../../chunks/bundle-YKlDDUzv.js');
require('../../ui/MutedAvatarOverlay.js');
require('../../ui/Checkbox.js');
require('../../ui/UserProfile.js');
require('../../sendbirdSelectors.js');
require('../../chunks/bundle-DaVXHMAD.js');
require('../../ui/Tooltip.js');
require('../../ui/TooltipWrapper.js');
require('../../chunks/bundle-BMHuIReK.js');
require('../../ui/MobileMenu.js');
require('../../chunks/bundle-Cuz0dQYk.js');
require('@sendbird/chat/message');
require('../../chunks/bundle-B5pLRPl_.js');
require('../../chunks/bundle-B34Twdvx.js');
require('../../chunks/bundle-C0V7lt2Q.js');
require('../../ui/OGMessageItemBody.js');
require('../../chunks/bundle-D77Ze9ys.js');
require('../../ui/MentionLabel.js');
require('../../ui/LinkLabel.js');
require('../../ui/TextMessageItemBody.js');
require('../../ui/FileMessageItemBody.js');
require('../../ui/TextButton.js');
require('../../ui/VoiceMessageItemBody.js');
require('../../ui/ProgressBar.js');
require('../../VoicePlayer/useVoicePlayer.js');
require('../../chunks/bundle-BvZclC0s.js');
require('../../VoiceRecorder/context.js');
require('../../ui/PlaybackTime.js');
require('../../ui/ThumbnailMessageItemBody.js');
require('../../chunks/bundle-d8T-zyt9.js');
require('../../ui/UnknownMessageItemBody.js');
require('../../ui/TemplateMessageItemBody.js');
require('../../chunks/bundle-Bfz-mRQs.js');
require('../../ui/FallbackTemplateMessageItemBody.tsx.js');
require('../../ui/LoadingTemplateMessageItemBody.tsx.js');
require('../../ui/MessageFeedbackFailedModal.js');
require('../../chunks/bundle-BudbV6mL.js');
require('../../chunks/bundle-BTDeRBxY.js');
require('../../Message/hooks/useDirtyGetMentions.js');
require('../../chunks/bundle-zx7nucQu.js');
require('../../chunks/bundle-CXbVQacJ.js');
require('../../chunks/bundle-XBKLQFeY.js');
require('../../chunks/bundle-By0FaU3-.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefaultCompat(React);

function ThreadList(_a) {
    var className = _a.className, _b = _a.renderMessage, renderMessage = _b === void 0 ? function (props) { return React__default.default.createElement(Thread_components_ThreadListItem, _tslib.__assign({}, props)); } : _b, renderCustomSeparator = _a.renderCustomSeparator, scrollRef = _a.scrollRef, scrollBottom = _a.scrollBottom;
    var config = useSendbird.useSendbird().state.config;
    var stringSet = LocalizationContext.useLocalization().stringSet;
    var userId = config.userId;
    var _c = ThreadProvider.useThread().state, currentChannel = _c.currentChannel, allThreadMessages = _c.allThreadMessages, localThreadMessages = _c.localThreadMessages;
    return (React__default.default.createElement("div", { className: "sendbird-thread-list ".concat(className) },
        allThreadMessages.map(function (message, idx) {
            var _a;
            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
            var prevMessage = allThreadMessages[idx - 1];
            var nextMessage = allThreadMessages[idx + 1];
            // eslint-disable-next-line no-constant-condition
            var _b = Channel_utils_compareMessagesForGrouping.compareMessagesForGrouping(prevMessage, message, nextMessage, stringSet, currentChannel, resolvedReplyType.getCaseResolvedReplyType(config.groupChannel.replyType).upperCase)
                , chainTop = _b[0], chainBottom = _b[1];
            var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && (dateFns.isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt)));
            var handleScroll = function () {
                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
                if (current && scrollBottom) {
                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
                    if (scrollBottom < bottom) {
                        current.scrollTop += bottom - scrollBottom;
                    }
                }
            };
            return (React__default.default.createElement(Message_context.MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
                message: message,
                chainTop: chainTop,
                chainBottom: chainBottom,
                hasSeparator: hasSeparator,
                renderCustomSeparator: renderCustomSeparator,
                handleScroll: handleScroll,
            })));
        }),
        localThreadMessages.map(function (message) {
            var _a;
            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
            var handleScroll = function () {
                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
                if (current) {
                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
                    if (scrollBottom < bottom) {
                        current.scrollTop += bottom - scrollBottom;
                    }
                }
            };
            return (React__default.default.createElement(Message_context.MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
                message: message,
                hasSeparator: false,
                renderCustomSeparator: renderCustomSeparator,
                handleScroll: handleScroll,
            })));
        })));
}

module.exports = ThreadList;
//# sourceMappingURL=ThreadList.js.map
