import { GroupChannel } from '@sendbird/chat/groupChannel';
import { FileMessage, FileMessageCreateParams } from '@sendbird/chat/message';
import type { Logger } from '../../../../lib/Sendbird/types';
import { SBUGlobalPubSub } from '../../../../lib/pubSub/topics';
import { SendableMessageType } from '../../../../utils';
interface DynamicProps {
    currentChannel: GroupChannel | null;
    onBeforeSendFileMessage?: (file: File, quotedMessage?: SendableMessageType) => FileMessageCreateParams;
    sendMessageStart: (message: SendableMessageType) => void;
    sendMessageFailure: (message: SendableMessageType) => void;
}
interface StaticProps {
    logger: Logger;
    pubSub: SBUGlobalPubSub;
}
export type SendFileMessageFunctionType = (file: File, quoteMessage?: SendableMessageType) => Promise<FileMessage>;
export default function useSendFileMessageCallback({ currentChannel, onBeforeSendFileMessage, sendMessageStart, sendMessageFailure, }: DynamicProps, { logger, pubSub, }: StaticProps): SendFileMessageFunctionType;
export {};
