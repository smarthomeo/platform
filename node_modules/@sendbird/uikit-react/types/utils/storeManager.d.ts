export type Store<T> = {
    getState: () => T;
    setState: (partial: Partial<T> | ((state: T) => Partial<T>), force?: boolean) => void;
    subscribe: (listener: () => void) => () => void;
};
export declare function hasStateChanged<T>(prevState: T, updates: Partial<T>): boolean;
/**
 * A custom store creation utility
 */
export declare function createStore<T extends object>(initialState: T): Store<T>;
